\hypertarget{array__builder_8h}{}\doxysection{/home/runner/work/cpp-\/sdks/cpp-\/sdks/libs/common/include/launchdarkly/bindings/c/array\+\_\+builder.h File Reference}
\label{array__builder_8h}\index{/home/runner/work/cpp-\/sdks/cpp-\/sdks/libs/common/include/launchdarkly/bindings/c/array\_builder.h@{/home/runner/work/cpp-\/sdks/cpp-\/sdks/libs/common/include/launchdarkly/bindings/c/array\_builder.h}}
{\ttfamily \#include $<$launchdarkly/bindings/c/export.\+h$>$}\newline
{\ttfamily \#include $<$launchdarkly/bindings/c/value.\+h$>$}\newline
Include dependency graph for array\+\_\+builder.\+h\+:
% FIG 0
\doxysubsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{array__builder_8h_a7cdf5dbdffee5f0ac2955b2f8a9fbae1}\label{array__builder_8h_a7cdf5dbdffee5f0ac2955b2f8a9fbae1}} 
typedef struct \+\_\+\+LDArray\+Builder $\ast$ {\bfseries LDArray\+Builder}
\end{DoxyCompactItemize}
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\hyperlink{array__builder_8h_a52a73e973ec4a7583ab037cd07b5ed64}{LD\+\_\+\+EXPORT}} (LDArray\+Builder) LDArray\+Builder\+\_\+\+New()
\item 
\mbox{\hyperlink{array__builder_8h_af9ddef99e55f49e0f63a25f9ed3ed340}{LD\+\_\+\+EXPORT}} (void) LDArray\+Builder\+\_\+\+Free(LDArray\+Builder array\+\_\+builder)
\item 
\mbox{\hyperlink{array__builder_8h_a76fb631a7bf3477c3670b6911970e4a3}{LD\+\_\+\+EXPORT}} (\mbox{\hyperlink{value_8h_ab2f8b088f5deaa20a08e2725df94e630}{LDValue}}) LDArray\+Builder\+\_\+\+Build(LDArray\+Builder array\+\_\+builder)
\end{DoxyCompactItemize}
\doxysubsection*{Variables}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{array__builder_8h_ac029c5032efbe9f76a3f74ae941e2f86}\label{array__builder_8h_ac029c5032efbe9f76a3f74ae941e2f86}} 
\mbox{\hyperlink{value_8h_ab2f8b088f5deaa20a08e2725df94e630}{LDValue}} {\bfseries val}
\end{DoxyCompactItemize}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{array__builder_8h_a52a73e973ec4a7583ab037cd07b5ed64}\label{array__builder_8h_a52a73e973ec4a7583ab037cd07b5ed64}} 
\index{array\_builder.h@{array\_builder.h}!LD\_EXPORT@{LD\_EXPORT}}
\index{LD\_EXPORT@{LD\_EXPORT}!array\_builder.h@{array\_builder.h}}
\doxysubsubsection{\texorpdfstring{LD\_EXPORT()}{LD\_EXPORT()}\hspace{0.1cm}{\footnotesize\ttfamily [1/3]}}
{\footnotesize\ttfamily LD\+\_\+\+EXPORT (\begin{DoxyParamCaption}\item[{LDArray\+Builder}]{ }\end{DoxyParamCaption})}

Construct a new array builder. \begin{DoxyReturn}{Returns}
The new array builder. 
\end{DoxyReturn}
\mbox{\Hypertarget{array__builder_8h_a76fb631a7bf3477c3670b6911970e4a3}\label{array__builder_8h_a76fb631a7bf3477c3670b6911970e4a3}} 
\index{array\_builder.h@{array\_builder.h}!LD\_EXPORT@{LD\_EXPORT}}
\index{LD\_EXPORT@{LD\_EXPORT}!array\_builder.h@{array\_builder.h}}
\doxysubsubsection{\texorpdfstring{LD\_EXPORT()}{LD\_EXPORT()}\hspace{0.1cm}{\footnotesize\ttfamily [2/3]}}
{\footnotesize\ttfamily LD\+\_\+\+EXPORT (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{value_8h_ab2f8b088f5deaa20a08e2725df94e630}{LDValue}}}]{ }\end{DoxyParamCaption})}

Construct an LDValue from an array builder.

After calling this method the array builder is consumed. It should not be used and the caller does not need to call LDArray\+Builder\+\_\+\+Free.


\begin{DoxyParams}{Parameters}
{\em array\+\_\+builder} & The array builder to build an LDValue from. Must not be NULL. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The built LDValue. Must not be NULL.
\end{DoxyReturn}
Allocates a new boolean-\/type LDValue. 
\begin{DoxyParams}{Parameters}
{\em val} & LDBoolean\+True or LDBoolean\+False. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
New LDValue.
\end{DoxyReturn}
Allocates a new number-\/type LDValue. 
\begin{DoxyParams}{Parameters}
{\em val} & Double value. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
New LDValue.
\end{DoxyReturn}
Allocates a new string-\/type LDValue.

The input string will be copied. To avoid the copy, see LDValue\+\_\+\+Constant\+String.


\begin{DoxyParams}{Parameters}
{\em val} & Constant reference to a string. The string is copied. Must not be NULL. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
New LDValue.
\end{DoxyReturn}
Allocates an LDValue by cloning an existing LDValue.


\begin{DoxyParams}{Parameters}
{\em source} & Source LDValue. Must not be NULL. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
New LDValue.
\end{DoxyReturn}
Get the value for the array-\/type iterator. The value\textquotesingle{}s lifetime is valid only for as long as the iterator. To obtain a copy, call LDValue\+\_\+\+New\+Value.


\begin{DoxyParams}{Parameters}
{\em iter} & The iterator to get a value for. Must not be NULL. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The value.
\end{DoxyReturn}
Get the value for an object-\/type iterator. The value\textquotesingle{}s lifetime is valid only for as long as the iterator. To obtain a copy, call LDValue\+\_\+\+New\+Value.


\begin{DoxyParams}{Parameters}
{\em iter} & The iterator to get a value for. Must not be NULL. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The value. 
\end{DoxyReturn}
\mbox{\Hypertarget{array__builder_8h_af9ddef99e55f49e0f63a25f9ed3ed340}\label{array__builder_8h_af9ddef99e55f49e0f63a25f9ed3ed340}} 
\index{array\_builder.h@{array\_builder.h}!LD\_EXPORT@{LD\_EXPORT}}
\index{LD\_EXPORT@{LD\_EXPORT}!array\_builder.h@{array\_builder.h}}
\doxysubsubsection{\texorpdfstring{LD\_EXPORT()}{LD\_EXPORT()}\hspace{0.1cm}{\footnotesize\ttfamily [3/3]}}
{\footnotesize\ttfamily LD\+\_\+\+EXPORT (\begin{DoxyParamCaption}\item[{void}]{ }\end{DoxyParamCaption})}

Free an array builder. This should only be done for a builder which has not been built. Calling LDArray\+Builder\+\_\+\+Build on an array builder transfers consumes the array builder.


\begin{DoxyParams}{Parameters}
{\em array\+\_\+builder} & The builder to free.\\
\hline
\end{DoxyParams}
Add a value to an array builder.

After calling this method the provider LDValue is consumed. It should not be accessed, and the caller doesn\textquotesingle{}t need to call LDValue\+\_\+\+Free.


\begin{DoxyParams}{Parameters}
{\em array\+\_\+builder} & The array builder to add the value to. Must not be NULL. \\
\hline
{\em val} & The value to add. Must not be NULL. \\
\hline
\end{DoxyParams}
