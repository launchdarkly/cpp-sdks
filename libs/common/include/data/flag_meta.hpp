#pragma once

#include <optional>

#include "evaluation_detail.hpp"

namespace launchdarkly {

/**
 * FlagMeta represents an evaluated flag either from the LaunchDarkly service,
 * or in bootstrap data generated by a server SDK.
 */
class FlagMeta {
   public:
    /**
     * The version of the flag.
     */
    long version() const;

    /**
     * True if a client SDK should track events for this flag.
     */
    bool track_events() const;

    /**
     * True if a client SDK should track reasons for this flag.
     */
    bool track_reason() const;

    /**
     * A timestamp, which if the current time is before, a client SDK
     * should send events for the flag.
     * @return
     */
    std::optional<long> track_events_until_date() const;

    /**
     * Details of the flags evaluation.
     */
    EvaluationDetail const& detail() const;

   private:
    long version_;
    bool track_events_;
    bool track_reason_;
    std::optional<long> track_events_until_date_;
    EvaluationDetail detail_;
};

}  // namespace launchdarkly
