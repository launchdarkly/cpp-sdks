evaluation/parameterized/prerequisites/prerequisite cycle is detected at top level, recursion stops/prerequisite cycle is detected at top level, recursion stops/evaluate flag with detail
evaluation/parameterized/prerequisites/prerequisite cycle is detected at top level, recursion stops/prerequisite cycle is detected at top level, recursion stops/evaluate all flags
evaluation/parameterized/prerequisites/prerequisite cycle is detected at deeper level, recursion stops/prerequisite cycle is detected at deeper level, recursion stops/evaluate flag with detail
evaluation/parameterized/prerequisites/prerequisite cycle is detected at deeper level, recursion stops/prerequisite cycle is detected at deeper level, recursion stops/evaluate all flags
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/fallthrough rollout/fallthrough rollout/evaluate flag without detail
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/fallthrough rollout/fallthrough rollout/evaluate flag with detail
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/fallthrough rollout/fallthrough rollout/evaluate all flags
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/rule rollout/rule rollout/evaluate flag without detail
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/rule rollout/rule rollout/evaluate flag with detail
evaluation/parameterized/rollout or experiment - error for empty variations list in rollout/rule rollout/rule rollout/evaluate all flags
evaluation/parameterized/segment match/user matches via include in multi-kind user/user matches via include in multi-kind user/evaluate flag without detail
evaluation/parameterized/segment match/user matches via include in multi-kind user/user matches via include in multi-kind user/evaluate flag with detail
evaluation/parameterized/segment match/user matches via include in multi-kind user/user matches via include in multi-kind user/evaluate all flags

events/summary events/prerequisites
events/feature events/full feature event for tracked flag/without reason/single kind default/malformed flag/type: bool
events/feature events/full feature event for tracked flag/without reason/single kind default/malformed flag/type: int
events/feature events/full feature event for tracked flag/without reason/single kind default/malformed flag/type: double
events/feature events/full feature event for tracked flag/without reason/single kind default/malformed flag/type: string
events/feature events/full feature event for tracked flag/without reason/single kind default/malformed flag/type: any
events/feature events/full feature event for tracked flag/without reason/single kind non-default/valid flag/type: bool
events/feature events/full feature event for tracked flag/without reason/single kind non-default/malformed flag/type: bool
events/feature events/full feature event for tracked flag/without reason/single kind non-default/malformed flag/type: int
events/feature events/full feature event for tracked flag/without reason/single kind non-default/malformed flag/type: double
events/feature events/full feature event for tracked flag/without reason/single kind non-default/malformed flag/type: string
events/feature events/full feature event for tracked flag/without reason/single kind non-default/malformed flag/type: any
events/feature events/full feature event for tracked flag/without reason/multi-kind/valid flag/type: bool
events/feature events/full feature event for tracked flag/without reason/multi-kind/malformed flag/type: bool
events/feature events/full feature event for tracked flag/without reason/multi-kind/malformed flag/type: int
events/feature events/full feature event for tracked flag/without reason/multi-kind/malformed flag/type: double
events/feature events/full feature event for tracked flag/without reason/multi-kind/malformed flag/type: string
events/feature events/full feature event for tracked flag/without reason/multi-kind/malformed flag/type: any
events/feature events/full feature event for tracked flag/with reason/single kind default/valid flag/type: bool
events/feature events/full feature event for tracked flag/with reason/single kind default/malformed flag/type: bool
events/feature events/full feature event for tracked flag/with reason/single kind default/malformed flag/type: int
events/feature events/full feature event for tracked flag/with reason/single kind default/malformed flag/type: double
events/feature events/full feature event for tracked flag/with reason/single kind default/malformed flag/type: string
events/feature events/full feature event for tracked flag/with reason/single kind default/malformed flag/type: any
events/feature events/full feature event for tracked flag/with reason/single kind non-default/valid flag/type: bool
events/feature events/full feature event for tracked flag/with reason/single kind non-default/malformed flag/type: bool
events/feature events/full feature event for tracked flag/with reason/single kind non-default/malformed flag/type: int
events/feature events/full feature event for tracked flag/with reason/single kind non-default/malformed flag/type: double
events/feature events/full feature event for tracked flag/with reason/single kind non-default/malformed flag/type: string
events/feature events/full feature event for tracked flag/with reason/single kind non-default/malformed flag/type: any
events/feature events/full feature event for tracked flag/with reason/multi-kind/valid flag/type: bool
events/feature events/full feature event for tracked flag/with reason/multi-kind/malformed flag/type: bool
events/feature events/full feature event for tracked flag/with reason/multi-kind/malformed flag/type: int
events/feature events/full feature event for tracked flag/with reason/multi-kind/malformed flag/type: double
events/feature events/full feature event for tracked flag/with reason/multi-kind/malformed flag/type: string
events/feature events/full feature event for tracked flag/with reason/multi-kind/malformed flag/type: any
events/feature events/evaluating all flags generates no events
events/feature prerequisite events/without reasons
events/feature prerequisite events/with reasons
events/experimentation/experiment in rule
events/experimentation/experiment in fallthrough
streaming/updates/flag patch with same version is not applied
streaming/updates/segment patch with same version is not applied
streaming/updates/flag patch with lower version is not applied
streaming/updates/segment patch with lower version is not applied
streaming/updates/flag delete with same version is not applied
streaming/updates/segment delete with same version is not applied
streaming/updates/flag delete with lower version is not applied
streaming/updates/segment delete with lower version is not applied
streaming/updates/flag delete for previously nonexistent flag is applied
streaming/updates/segment delete for previously nonexistent segment is applied
streaming/retry behavior/retry after IO error on reconnect
streaming/retry behavior/retry after recoverable HTTP error on reconnect/error 400
streaming/retry behavior/retry after recoverable HTTP error on reconnect/error 408
streaming/retry behavior/retry after recoverable HTTP error on reconnect/error 429
streaming/retry behavior/retry after recoverable HTTP error on reconnect/error 500
streaming/retry behavior/retry after recoverable HTTP error on reconnect/error 503
streaming/validation/drop and reconnect if stream event has malformed JSON/put event
streaming/validation/drop and reconnect if stream event has malformed JSON/patch event
streaming/validation/drop and reconnect if stream event has malformed JSON/delete event
streaming/validation/drop and reconnect if stream event has well-formed JSON not matching schema/put event
streaming/validation/drop and reconnect if stream event has well-formed JSON not matching schema/patch event
streaming/validation/drop and reconnect if stream event has well-formed JSON not matching schema/delete event

# The Server doesn't need to know how to deserialize users.
context type/convert/old user to context/{"key": ""}
context type/convert/old user to context/{"key": "a"}
context type/convert/old user to context/{"key": "a"}
context type/convert/old user to context/{"key": "a", "custom": {"b": true}}
context type/convert/old user to context/{"key": "a", "custom": {"b": 1}}
context type/convert/old user to context/{"key": "a", "custom": {"b": "c"}}
context type/convert/old user to context/{"key": "a", "custom": {"b": [1, 2]}}
context type/convert/old user to context/{"key": "a", "custom": {"b": {"c": 1}}}
context type/convert/old user to context/{"key": "a", "custom": {"b": 1, "c": 2}}
context type/convert/old user to context/{"key": "a", "custom": {"b": 1, "c": null}}
context type/convert/old user to context/{"key": "a", "custom": {}}
context type/convert/old user to context/{"key": "a", "custom": null}
context type/convert/old user to context/{"key": "a", "anonymous": true}
context type/convert/old user to context/{"key": "a", "anonymous": false}
context type/convert/old user to context/{"key": "a", "anonymous": null}
context type/convert/old user to context/{"key": "a", "privateAttributeNames": ["b"]}
context type/convert/old user to context/{"key": "a", "privateAttributeNames": []}
context type/convert/old user to context/{"key": "a", "privateAttributeNames": null}
context type/convert/old user to context/{"key": "a", "name": "b"}
context type/convert/old user to context/{"key": "a", "name": null}
context type/convert/old user to context/{"key": "a", "firstName": "b"}
context type/convert/old user to context/{"key": "a", "firstName": null}
context type/convert/old user to context/{"key": "a", "lastName": "b"}
context type/convert/old user to context/{"key": "a", "lastName": null}
context type/convert/old user to context/{"key": "a", "email": "b"}
context type/convert/old user to context/{"key": "a", "email": null}
context type/convert/old user to context/{"key": "a", "country": "b"}
context type/convert/old user to context/{"key": "a", "country": null}
context type/convert/old user to context/{"key": "a", "avatar": "b"}
context type/convert/old user to context/{"key": "a", "avatar": null}
context type/convert/old user to context/{"key": "a", "ip": "b"}
context type/convert/old user to context/{"key": "a", "ip": null}

# These appear to only fail in CI, but not locally on Mac. Requires investigation.
evaluation/bucketing/bucket by non-key attribute/in rollouts/invalid value type
evaluation/bucketing/bucket by non-key attribute/in rollouts/attribute not found
