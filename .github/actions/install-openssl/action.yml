name: Install OpenSSL
description: 'Install OpenSSL >= 3 if not already present.'

outputs:
  OPENSSL_ROOT_DIR:
    description: The location of the installed OpenSSL.
    value: ${{ steps.determine-root.outputs.OPENSSL_ROOT_DIR }}
runs:
  using: composite
  steps:
    # The ubuntu runner already has OpenSSL > 3 and CMake can find it.
    - name: Install for Ubuntu.
      if: runner.os == 'Linux'
      shell: bash
      run: echo "Nothing to do!"

    # The Mac runner already has OpenSSL > 3 via brew, but we need to expose its
    # install path to CMake.
    - name: Install for Mac
      id: brew-action
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "OpenSSL Prefix: $(brew --prefix openssl@3)"
        echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_OUTPUT

    # The Windows runner has an older version of OpenSSL and needs to be upgraded.
    # Additionally, it seems to randomly be installed in OpenSSL-Win64 or OpenSSL depending on
    # the runner Github gives us.
    - name: Install for Windows
      id: choco-action
      if: runner.os == 'Windows'
      shell: bash
      run: |
        choco install openssl --version 3.1.1 -y --no-progress
        if [ -d "C:\Program Files\OpenSSL-Win64" ]; then
          echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" >> $GITHUB_OUTPUT
        else
          echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL" >> $GITHUB_OUTPUT
        fi

    - name: Determine root
      id: determine-root
      shell: bash
      run: |
        if [ ! -z "$ROOT_CHOCO" ]; then
          echo "OPENSSL_ROOT_DIR=$ROOT_CHOCO" >> $GITHUB_OUTPUT
          echo Setting OPENSSL_ROOT_DIR to "$ROOT_CHOCO"
        elif [ ! -z "$ROOT_BREW" ]; then
          echo "OPENSSL_ROOT_DIR=$ROOT_BREW" >> $GITHUB_OUTPUT
          echo Setting OPENSSL_ROOT_DIR to "$ROOT_BREW"
        fi

      env:
        ROOT_CHOCO: ${{ steps.choco-action.outputs.OPENSSL_ROOT_DIR }}
        ROOT_BREW: ${{ steps.brew-action.outputs.OPENSSL_ROOT_DIR }}
