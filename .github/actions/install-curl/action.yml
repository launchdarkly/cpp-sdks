name: Install CURL
description: 'Install CURL development libraries for all platforms.'

outputs:
  CURL_ROOT:
    description: The location of the installed CURL.
    value: ${{ steps.determine-root.outputs.CURL_ROOT }}

runs:
  using: composite
  steps:
    # Linux: Install via apt-get
    - name: Install CURL for Ubuntu
      if: runner.os == 'Linux'
      id: apt-action
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev
        echo "CURL_ROOT=/usr" >> $GITHUB_OUTPUT

    # macOS: Install via homebrew
    - name: Install CURL for macOS
      if: runner.os == 'macOS'
      id: brew-action
      shell: bash
      run: |
        brew install curl
        echo "CURL_ROOT=$(brew --prefix curl)" >> $GITHUB_OUTPUT

    # Windows: Build CURL from source with MSVC
    - name: Install CURL for Windows
      if: runner.os == 'Windows'
      id: windows-action
      shell: pwsh
      run: |
        Write-Host "Building CURL from source with MSVC..."

        # Download CURL source
        $version = "8.11.1"
        $url = "https://curl.se/download/curl-$version.tar.gz"
        $output = "curl-$version.tar.gz"

        Write-Host "Downloading CURL $version source from $url"
        Invoke-WebRequest -Uri $url -OutFile $output -MaximumRetryCount 3 -RetryIntervalSec 5

        # Extract
        Write-Host "Extracting..."
        tar -xzf $output

        # Build with CMake (MSVC)
        cd "curl-$version"

        Write-Host "Configuring CURL with CMake..."
        cmake -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_INSTALL_PREFIX="C:\curl-install" `
          -DBUILD_SHARED_LIBS=OFF `
          -DCURL_USE_SCHANNEL=ON `
          -DCURL_DISABLE_TESTS=ON `
          -DBUILD_TESTING=OFF `
          -S . -B build

        Write-Host "Building CURL..."
        cmake --build build --config Release --target install

        Write-Host "CURL installed to C:\curl-install"
        echo "CURL_ROOT=C:\curl-install" >> $env:GITHUB_OUTPUT

    - name: Determine root
      id: determine-root
      shell: bash
      run: |
        if [ ! -z "$ROOT_APT" ]; then
          echo "CURL_ROOT=$ROOT_APT" >> $GITHUB_OUTPUT
          echo Setting CURL_ROOT to "$ROOT_APT"
        elif [ ! -z "$ROOT_BREW" ]; then
          echo "CURL_ROOT=$ROOT_BREW" >> $GITHUB_OUTPUT
          echo Setting CURL_ROOT to "$ROOT_BREW"
        elif [ ! -z "$ROOT_WINDOWS" ]; then
          echo "CURL_ROOT=$ROOT_WINDOWS" >> $GITHUB_OUTPUT
          echo Setting CURL_ROOT to "$ROOT_WINDOWS"
        fi
      env:
        ROOT_APT: ${{ steps.apt-action.outputs.CURL_ROOT }}
        ROOT_BREW: ${{ steps.brew-action.outputs.CURL_ROOT }}
        ROOT_WINDOWS: ${{ steps.windows-action.outputs.CURL_ROOT }}
