name: libs/client-sdk

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md' #Do not need to run CI for markdown changes.
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  contract-tests:
    runs-on: ubuntu-22.04
    env:
      # Port the test service (implemented in this repo) should bind to.
      TEST_SERVICE_PORT: 8123
      TEST_SERVICE_BINARY: ./build/contract-tests/sdk-contract-tests/sdk-tests
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/ci
        with:
          cmake_target: sdk-tests
          run_tests: false
      - name: 'Launch test service as background task'
        run: $TEST_SERVICE_BINARY $TEST_SERVICE_PORT 2>&1 &
      - uses: ./.github/actions/contract-tests
        with:
          # Inform the test harness of test service's port.
          test_service_port: ${{ env.TEST_SERVICE_PORT }}
          extra_params: '-skip-from ./contract-tests/sdk-contract-tests/test-suppressions.txt'
  build-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/ci
        with:
          cmake_target: launchdarkly-cpp-client
  build-test-mac:
    runs-on: macos-12
    steps:
      - run: |
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> "$GITHUB_ENV"
          # For debugging
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)"
      - uses: actions/checkout@v3
      - uses: ./.github/actions/ci
        env:
          OPENSSL_ROOT_DIR: ${{ env.OPENSSL_ROOT_DIR }}
        with:
          cmake_target: launchdarkly-cpp-client
          platform_version: 12
  build-test-windows:
    runs-on: windows-2022
    steps:
      - name: Upgrade OpenSSL
        shell: bash
        run: |
          choco upgrade openssl --no-progress
      - name: Determine OpenSSL Installation Directory
        shell: bash
        run: |
          if [ -d "C:\Program Files\OpenSSL-Win64" ]; then
            echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" >> "$GITHUB_ENV"
          else
            echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL" >> "$GITHUB_ENV"
          fi
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: ./.github/actions/ci
        env:
          OPENSSL_ROOT_DIR: ${{ env.OPENSSL_ROOT_DIR }}
          BOOST_LIBRARY_DIR: 'C:\local\boost_1_81_0\lib64-msvc-14.3'
          BOOST_LIBRARYDIR: 'C:\local\boost_1_81_0\lib64-msvc-14.3'
        with:
          cmake_target: launchdarkly-cpp-client
          platform_version: 2022
          toolset: msvc
