name: cmake-integration

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md' # Do not need to run CI for markdown changes.
  pull_request:
    branches: [ "main", "feat/**" ]
    paths-ignore:
      - '**.md'
  schedule:
    # Run daily at midnight PST
    - cron: '0 8 * * *'

jobs:
  test-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: ./.github/actions/cmake-test
        with:
          platform_version: '22.04'

  test-ubuntu-curl:
    runs-on: ubuntu-22.04
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Install CURL
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
      - uses: ./.github/actions/cmake-test
        with:
          platform_version: '22.04'
          cmake_extra_args: '-DLD_CURL_NETWORKING=ON'

  test-macos:
    runs-on: macos-13
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - uses: ./.github/actions/cmake-test
        with:
          platform_version: '12'

  test-macos-curl:
    runs-on: macos-13
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Install CURL
        run: brew install curl
      - uses: ./.github/actions/cmake-test
        with:
          platform_version: '12'
          cmake_extra_args: '-DLD_CURL_NETWORKING=ON'

  test-windows:
    runs-on: windows-2022
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      # https://github.com/ilammy/msvc-dev-cmd/releases/tag/v1.13.0
      - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756
      - uses: ./.github/actions/cmake-test
        env:
          Boost_DIR: 'C:\local\boost_1_87_0\lib64-msvc-14.3\cmake\Boost-1.87.0'
        with:
          platform_version: 2022
          toolset: msvc

  test-windows-curl:
    runs-on: windows-2022
    steps:
      # https://github.com/actions/checkout/releases/tag/v4.3.0
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      # https://github.com/ilammy/msvc-dev-cmd/releases/tag/v1.13.0
      - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756
      - uses: ./.github/actions/install-curl
        id: install-curl
      - uses: ./.github/actions/cmake-test
        env:
          Boost_DIR: 'C:\local\boost_1_87_0\lib64-msvc-14.3\cmake\Boost-1.87.0'
          CURL_ROOT: ${{ steps.install-curl.outputs.CURL_ROOT }}
          CMAKE_PREFIX_PATH: ${{ steps.install-curl.outputs.CURL_ROOT }}
        with:
          platform_version: 2022
          toolset: msvc
          cmake_extra_args: '-DLD_CURL_NETWORKING=ON'
